<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<context:component-scan base-package="com.mingyuan.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!--配置数据库连接池 -->
	<context:property-placeholder location="classpath:spring/dbconfig.properties" />
	<bean id="comboPooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.darver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:configLocation="classpath:mybatis-config.xml"
		p:dataSource-ref="comboPooledDataSource"
	  p:mapperLocations="classpath:mappers/*.xml" 
	   />
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" 
				p:basePackage="com.mingyuan.dao" />
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">	
		<property name="authenticator" ref="authenticator"></property>		
		<property name="realms">
			<list>
				<ref bean="oneRealm"/>
			</list>			
		</property>			
	</bean>
	
	<bean id="authenticator" 
    	class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
    	<property name="authenticationStrategy">
    		<bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>
    	</property>
    </bean>
    	<bean id="oneRealm" class="com.mingyuan.realms.OneRealms">
    				<property name="credentialsMatcher">
    							<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    									<property name="hashAlgorithmName" value="MD5"/>
    										<property name="hashIterations" value="1024"/>
    							</bean>
    				</property>
    	</bean>
    	<!--    4. 配置 LifecycleBeanPostProcessor. 可以自定的来调用配置在 Spring IOC 容器中 shiro bean 的生命周期方法. --> 
          
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- Enable Shiro Annotations for Spring-configured beans.  Only run after
         the lifecycleBeanProcessor has run:
     
    5. 启用 IOC 容器中使用 shiro 的注解. 但必须在配置了 LifecycleBeanPostProcessor 之后才可以使用.  -->
        
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<!-- 出现错误之后的跳转路径的配置 -->
		<property name="loginUrl" value="/index.jsp"></property>
		<!-- 认证失败之后的跳转路径页面 -->
		<property name="unauthorizedUrl" value="/index.jsp"></property>
		<property name="successUrl" value="/regseccess.html"></property>
		<!-- shiro里面需要针对于所有的路径进行配置		      
        	配置哪些页面需要受保护. 
        	以及访问这些页面需要的权限. 
        	1). anon 可以被匿名访问
        	2). authc 必须认证(即登录)后才可能访问的页面. 
        	3). logout 登出.
        	4). roles 角色过滤器 -->   
		<property name="filterChainDefinitions">
			<value>
				/showReg=anon
				/user/login=anon
				/index.jsp=anon
				/showLogin=anon
				/bootstrap/**=anon
				/css/**=anon
				/fonts/**=anon
				/img/**=anon
				/jquery/**=anon
				/script/**=anon
				/ztree/**=anon
				/** = authc
			</value>
		</property>
	</bean> 
	<!-- 配置声明式事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="comboPooledDataSource"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
